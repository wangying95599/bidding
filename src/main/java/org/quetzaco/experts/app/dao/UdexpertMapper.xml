<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.quetzaco.experts.app.dao.UdexpertMapper">
  <resultMap id="BaseResultMap" type="org.quetzaco.experts.model.Udexpert">
    <id column="expert_id" jdbcType="INTEGER" property="expertId" />
    <result column="no" jdbcType="VARCHAR" property="no" />
    <result column="card" jdbcType="VARCHAR" property="card" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="company" jdbcType="VARCHAR" property="company" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="record_flag" jdbcType="VARCHAR" property="recordFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    expert_id, no, card, name, phone, company, region, record_flag
  </sql>
  <select id="selectByExample" parameterType="org.quetzaco.experts.model.UdexpertExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from udexpert
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from udexpert
    where expert_id = #{expertId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from udexpert
    where expert_id = #{expertId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.quetzaco.experts.model.UdexpertExample">
    delete from udexpert
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.quetzaco.experts.model.Udexpert">
    <selectKey keyProperty="expertId" order="BEFORE" resultType="java.lang.Integer">
      SELECT nextval('expert_id_seq')
    </selectKey>  
    insert into udexpert (expert_id, no, card, 
      name, phone, company, 
      region, record_flag)
    values (#{expertId,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, #{card,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{company,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR}, #{recordFlag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.quetzaco.experts.model.Udexpert">
    <selectKey keyProperty="expertId" order="BEFORE" resultType="java.lang.Integer">
      SELECT nextval('expert_id_seq')
    </selectKey>  
    insert into udexpert
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="expertId != null">
        expert_id,
      </if>
      <if test="no != null">
        no,
      </if>
      <if test="card != null">
        card,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="company != null">
        company,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="recordFlag != null">
        record_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="expertId != null">
        #{expertId,jdbcType=INTEGER},
      </if>
      <if test="no != null">
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="card != null">
        #{card,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        #{company,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="recordFlag != null">
        #{recordFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.quetzaco.experts.model.UdexpertExample" resultType="java.lang.Long">
    select count(*) from udexpert
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update udexpert
    <set>
      <if test="record.expertId != null">
        expert_id = #{record.expertId,jdbcType=INTEGER},
      </if>
      <if test="record.no != null">
        no = #{record.no,jdbcType=VARCHAR},
      </if>
      <if test="record.card != null">
        card = #{record.card,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.company != null">
        company = #{record.company,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.recordFlag != null">
        record_flag = #{record.recordFlag,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update udexpert
    set expert_id = #{record.expertId,jdbcType=INTEGER},
      no = #{record.no,jdbcType=VARCHAR},
      card = #{record.card,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      company = #{record.company,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      record_flag = #{record.recordFlag,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.quetzaco.experts.model.Udexpert">
    update udexpert
    <set>
      <if test="no != null">
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="card != null">
        card = #{card,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="company != null">
        company = #{company,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="recordFlag != null">
        record_flag = #{recordFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where expert_id = #{expertId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.quetzaco.experts.model.Udexpert">
    update udexpert
    set no = #{no,jdbcType=VARCHAR},
      card = #{card,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      company = #{company,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      record_flag = #{recordFlag,jdbcType=VARCHAR}
    where expert_id = #{expertId,jdbcType=INTEGER}
  </update>
  
  
  <!-- 以下是自定义的 ,注意没设置的情况，应该加上set if-->
  <select id="extractExpert" parameterType="map" resultMap="BaseResultMap">
     
	select distinct p.expert_id,p.name
	from udexpert p,udexpert_major em
	where 
	p.company not in (select company from udsetcompany where project_id=#{id,jdbcType=INTEGER} and company is not null)
	and p.expert_id not in (select expert_id from udsetexpert where project_id=#{id,jdbcType=INTEGER} and expert_id is not null)
	and p.expert_id in (select DISTINCT expert_id from udexpert_region where region in (select region from udsetregion where project_id=#{id,jdbcType=INTEGER} )) 
	and p.expert_id=em.expert_id and em.major_code in(select major_code from udmajor where major_code like #{majorCode,jdbcType=VARCHAR})
  </select>
  
  
</mapper>